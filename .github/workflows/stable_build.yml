name: Stable Build

on:
  schedule:
    - cron: 0 12 * * *
  repository_dispatch:

jobs:
  buildtest:
    name: Test Build on ${{ matrix.os }} with JDK 11.0.4
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Checkout PhantomBot Repository
      uses: actions/checkout@v2
      with:
        repository: PhantomBot/PhantomBot
        ref: master 
        fetch-depth: 1 
    - name: Set up JDK 11.0.4
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up Ant (Linux)
      run: sudo apt-get install ant
      if: startsWith(matrix.os, 'ubuntu-')
    - name: Set up Ant (Windows)
      run: choco install ant
      if: startsWith(matrix.os, 'windows-')
    - name: Set up Ant (macOS)
      run: |
        wget https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/ant.rb
        sed -i '' -e 's/www.apache.org\/dyn\/closer.cgi?path=/archive.apache.org\/dist\//g' ant.rb
        chmod +x ant.rb
        brew install ./ant.rb
        rm -f ant.rb
      if: startsWith(matrix.os, 'macOS-')
    - name: Build with Ant (Linux)
      if: startsWith(matrix.os, 'ubuntu-')
      run: ant -noinput -buildfile build.xml test
    - name: Build with Ant (Windows)
      if: startsWith(matrix.os, 'windows-')
      run: ant -noinput -buildfile build.xml test
    - name: Build with Ant (macOS)
      if: startsWith(matrix.os, 'macOS-')
      run: ant -noinput -buildfile build.xml test
  docker:
    name: Docker build on ubuntu-latest with JDK 11.0.4
    runs-on: ubuntu-latest
    needs: buildtest
    steps:
    - name: Check Credentials
      id: check_credentials
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_CLITOKEN: ${{ secrets.DOCKER_CLITOKEN }}
        DOCKER_REPO_STABLE: ${{ secrets.DOCKER_REPO_STABLE }}
      run: |
        if [ "${DOCKER_USER}" == "" ]; then
          echo "Missing User"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        elif [ "${DOCKER_CLITOKEN}" == "" ]; then
          echo "Missing Cli Token"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        elif [ "${DOCKER_REPO_STABLE}" == "" ]; then
          echo "Missing Repo"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        else
          echo "All secrets present"
          echo "##[set-output name=missingsecrets;]$(echo no)"
        fi
    - name: Checkout Repository
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: actions/checkout@v2
      with:
        fetch-depth: 1 
    - name: Set up JDK 11.0.4
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up tools
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      run: sudo apt-get install ant perl git zip coreutils
    - name: Login to DockerHub Registry
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      run: echo ${{ secrets.DOCKER_CLITOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
    - name: Build and Push Nightly Build
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      env:
        TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_REPO_STABLE: ${{ secrets.DOCKER_REPO_STABLE }}
      run: |
        cd ${GITHUB_WORKSPACE}/scripts
        chmod 0744 ./stablePBDocker.sh
        ./stablePBDocker.sh
