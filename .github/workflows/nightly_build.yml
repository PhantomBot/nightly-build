name: Nightly Build

on:
  schedule:
    - cron: 0 12 * * *
  repository_dispatch:
  workflow_dispatch:

jobs:
  buildtest:
    name: Test Build on ubuntu-latest with JDK 11.0.4
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PhantomBot Repository
      uses: actions/checkout@v2
      with:
        repository: PhantomBot/PhantomBot
        ref: master
        persist-credentials: false
    - name: Set up JDK 11.0.4
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up Ant
      run: sudo apt-get install ant
    - name: Build with Ant
      run: ant -noinput -buildfile build.xml test
  dryrun:
    name: Dry run on ubuntu-latest with JDK 11.0.4
    runs-on: ubuntu-latest
    needs: buildtest
    if: github.repository != 'PhantomBot/nightly-build'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Set up JDK 11.0.4
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up tools
      run: sudo apt-get install ant perl git zip coreutils
    - name: Dry Run Nightly Build
      env:
        DRY_RUN: 'true'
      run: |
        cd ${GITHUB_WORKSPACE}/scripts
        chmod 0744 ./nightlyPBBuild.sh
        ./nightlyPBBuild.sh
  build:
    name: Build and push on ubuntu-latest with JDK 11.0.4
    runs-on: ubuntu-latest
    needs: buildtest
    if: github.repository == 'PhantomBot/nightly-build'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Set up JDK 11.0.4
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up tools
      run: sudo apt-get install ant perl git zip coreutils
    - name: Build and Push Nightly Build
      env:
        TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
        DRY_RUN: 'false'
        ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}
        ROLLBAR_ENDPOINT: ${{ secrets.ROLLBAR_ENDPOINT }}
        ROLLBAR_WRITE_TOKEN: ${{ secrets.ROLLBAR_WRITE_TOKEN }}
      run: |
        cd ${GITHUB_WORKSPACE}/scripts
        chmod 0744 ./nightlyPBBuild.sh
        ./nightlyPBBuild.sh
  docker:
    name: Docker build on ubuntu-latest with JDK 11.0.4
    runs-on: ubuntu-latest
    needs: buildtest
    steps:
    - name: Check Credentials
      id: check_credentials
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_CLITOKEN: ${{ secrets.DOCKER_CLITOKEN }}
        DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      run: |
        if [ "${DOCKER_USER}" == "" ]; then
          echo "Missing User"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        elif [ "${DOCKER_CLITOKEN}" == "" ]; then
          echo "Missing Cli Token"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        elif [ "${DOCKER_REPO}" == "" ]; then
          echo "Missing Repo"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        else
          echo "All secrets present"
          echo "##[set-output name=missingsecrets;]$(echo no)"
        fi
    - name: Checkout Repository
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Set up JDK 11.0.4
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up tools
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      run: sudo apt-get install ant perl git zip coreutils
    - name: Set up Docker Buildx
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        buildx-version: latest
        qemu-version: latest
    - name: Login to DockerHub Registry
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      run: echo ${{ secrets.DOCKER_CLITOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
    - name: Build and Push Nightly Build
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      env:
        TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      run: |
        cd ${GITHUB_WORKSPACE}/scripts
        chmod 0744 ./nightlyPBDocker.sh
        ./nightlyPBDocker.sh
